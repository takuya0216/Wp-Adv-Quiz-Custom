!function(i, e) {
    function t() {
        if (!r) {
            r = !0;
            for (var i = 0; i < n.length; i++)
                n[i].fn.call(window, n[i].ctx);
            n = []
        }
    }
    function o() {
        "complete" === document.readyState && t()
    }
    i = i || "wpAdvQuizReady",
    e = e || window;
    var n = []
      , r = !1
      , s = !1;
    e[i] = function(i, e) {
        return r ? void setTimeout(function() {
            i(e)
        }, 1) : (n.push({
            fn: i,
            ctx: e
        }),
        void ("complete" === document.readyState ? setTimeout(t, 1) : s || (document.addEventListener ? (document.addEventListener("DOMContentLoaded", t, !1),
        window.addEventListener("load", t, !1)) : (document.attachEvent("onreadystatechange", o),
        window.attachEvent("onload", t)),
        s = !0)))
    }
}("wpAdvQuizReady", window),
wpAdvQuizReady(function() {
    for (var i = window.wpAdvQuizInitList || [], e = 0; e < i.length; e++)
        jQuery(i[e].id).wpAdvQuizFront(i[e].init)
}),
function(i) {
    i.wpAdvQuizFront = function(e, t) {
        function o() {
            var i = 0
              , e = -1
              , t = 0
              , o = !1;
            this.questionStart = function(t) {
                e != -1 && this.questionStop(),
                e = t,
                i = +new Date
            }
            ,
            this.questionStop = function() {
                e != -1 && (a[e].time += Math.round((new Date - i) / 1e3),
                e = -1)
            }
            ,
            this.startQuiz = function() {
                o && this.stopQuiz(),
                t = +new Date,
                o = !0
            }
            ,
            this.stopQuiz = function() {
                o && (a.comp.quizTime += Math.round((new Date - t) / 1e3),
                o = !1)
            }
            ,
            this.init = function() {}
        }
        var n = i(e)
          , r = t
          , s = this
          , a = new Object
          , u = new Object
          , d = 0
          , c = null
          , p = []
          , l = ""
          , h = !1
          , f = 1
          , m = {
            randomAnswer: 0,
            randomQuestion: 0,
            disabledAnswerMark: 0,
            checkBeforeStart: 0,
            preview: 0,
            cors: 0,
            isAddAutomatic: 0,
            quizSummeryHide: 0,
            skipButton: 0,
            reviewQustion: 0,
            autoStart: 0,
            forcingQuestionSolve: 0,
            hideQuestionPositionOverview: 0,
            formActivated: 0,
            maxShowQuestion: 0,
            sortCategories: 0
        }
          , w = {
            isQuizStart: 0,
            isLocked: 0,
            loadLock: 0,
            isPrerequisite: 0,
            isUserStartLocked: 0
        }
          , Q = {
            check: 'input[name="check"]',
            next: 'input[name="next"]',
            questionList: ".wpAdvQuiz_questionList",
            skip: 'input[name="skip"]',
            singlePageLeft: 'input[name="wpAdvQuiz_pageLeft"]',
            singlePageRight: 'input[name="wpAdvQuiz_pageRight"]'
        }
          , z = {
            back: n.find('input[name="back"]'),
            next: n.find(Q.next),
            quiz: n.find(".wpAdvQuiz_quiz"),
            questionList: n.find(".wpAdvQuiz_list"),
            results: n.find(".wpAdvQuiz_results"),
            quizStartPage: n.find(".wpAdvQuiz_text"),
            timelimit: n.find(".wpAdvQuiz_time_limit"),
            toplistShowInButton: n.find(".wpAdvQuiz_toplistShowInButton"),
            listItems: i()
        }
          , v = {
            token: "",
            isUser: 0
        }
          , _ = {
            START: 0,
            END: 1
        }
          , P = function() {
            var i = r.timelimit
              , e = 0
              , t = {};
            return t.stop = function() {
                i && (window.clearInterval(e),
                z.timelimit.hide())
            }
            ,
            t.start = function() {
                if (i) {
                    var o = 1e3 * i
                      , n = z.timelimit.find("span").text(s.methode.parseTime(i))
                      , r = z.timelimit.find(".wpAdvQuiz_progress");
                    z.timelimit.show();
                    var a = +new Date;
                    e = window.setInterval(function() {
                        var i = +new Date - a
                          , e = o - i;
                        i >= 500 && n.text(s.methode.parseTime(Math.ceil(e / 1e3))),
                        r.css("width", e / o * 100 + "%"),
                        e <= 0 && (t.stop(),
                        s.methode.finishQuiz(!0))
                    }, 16)
                }
            }
            ,
            t
        }()
          , g = new function() {
            function e(i) { 
                var e = c.eq(i)
                  , t = e.offset().top
                  , o = a.offset().top
                  , n = t - o;
				  
				if (e.length) {
					if (n - 4 < 0 || n + 32 > 100) {
						var r = o - c.eq(0).offset().top - (o - d.offset().top) + e.position().top;
						r > w && (r = w);
						var s = r / h;
						d.attr("style", "margin-top: " + -r + "px !important"),
						u.css({
							top: s
						})
					}
				}
            }
            function t(i) {
                var e = ""
                  , t = Q[i];
                t.review ? e = "#FFB800" : t.solved && (e = "#6CA54C"),
                c.eq(i).css("background-color", e)
            }
            function o(i) {
                i.preventDefault();
                var e = i.pageY - l;
                e < 0 && (e = 0),
                e > p && (e = p);
                var t = h * e;
                d.attr("style", "margin-top: " + -t + "px !important"),
                u.css({
                    top: e
                })
            }
            function r(e) {
                e.preventDefault(),
                i(document).unbind(".scrollEvent")
            }
            var a = []
              , u = []
              , d = []
              , c = []
              , p = 0
              , l = 0
              , h = 0
              , f = 0
              , w = 0
              , Q = [];
            this.init = function() {
                a = n.find(".wpAdvQuiz_reviewQuestion"),
                u = a.find("div"),
                d = a.find("ol"),
                c = d.children(),
                u.mousedown(function(e) {
                    e.preventDefault(),
                    e.stopAdvpagation(),
                    l = e.pageY - u.offset().top + f,
                    i(document).bind("mouseup.scrollEvent", r),
                    i(document).bind("mousemove.scrollEvent", o)
                }),
                c.click(function(e) {
                    s.methode.showQuestion(i(this).index())
                }),
                n.bind("questionSolved", function(i) {
                    Q[i.values.index].solved = i.values.solved,
                    t(i.values.index)
                }),
                n.bind("changeQuestion", function(i) {
                    c.removeClass("wpAdvQuiz_reviewQuestionTarget"),
                    c.eq(i.values.index).addClass("wpAdvQuiz_reviewQuestionTarget"),
                    e(i.values.index)
                }),
                n.bind("reviewQuestion", function(i) {
                    Q[i.values.index].review = !Q[i.values.index].review,
                    t(i.values.index)
                }),
                a.bind("mousewheel DOMMouseScroll", function(i) {
                    i.preventDefault();
                    var e = i.originalEvent
                      , t = e.wheelDelta ? -e.wheelDelta / 120 : e.detail / 3
                      , o = 20 * t
                      , n = f - d.offset().top + o;
                    n > w && (n = w),
                    n < 0 && (n = 0);
                    var r = n / h;
                    return d.attr("style", "margin-top: " + -n + "px !important"),
                    u.css({
                        top: r
                    }),
                    !1
                })
            }
            ,
            this.show = function(i) {
                if (m.reviewQustion && a.parent().show(),
                n.find(".wpAdvQuiz_reviewDiv .wpAdvQuiz_button2").show(),
                !i) {
                    d.attr("style", "margin-top: 0px !important"),
                    u.css({
                        top: 0
                    });
                    var e = d.outerHeight()
                      , t = a.height();
                    p = t - u.height(),
                    l = 0,
                    w = e - t,
                    h = w / p,
                    this.reset(),
                    e > 100 && u.show(),
                    f = u.offset().top
                }
            }
            ,
            this.hide = function() {
                a.parent().hide()
            }
            ,
            this.toggle = function() {
                if (m.reviewQustion) {
                    a.parent().toggle(),
                    c.removeClass("wpAdvQuiz_reviewQuestionTarget"),
                    n.find(".wpAdvQuiz_reviewDiv .wpAdvQuiz_button2").hide(),
                    d.attr("style", "margin-top: 0px !important"),
                    u.css({
                        top: 0
                    });
                    var i = d.outerHeight()
                      , e = a.height();
                    p = e - u.height(),
                    l = 0,
                    w = i - e,
                    h = w / p,
                    i > 100 && u.show(),
                    f = u.offset().top
                }
            }
            ,
            this.reset = function() {
                for (var i = 0, e = c.length; i < e; i++)
                    Q[i] = {};
                c.removeClass("wpAdvQuiz_reviewQuestionTarget").css("background-color", "")
            }
        }
          , q = new o
          , x = function(e, t, o, n) {
            var r = !0
              , a = 0
              , u = i.isArray(t.points)
              , d = {}
              , c = {
                singleMulti: function() {
                    var e = n.find(".wpAdvQuiz_questionInput").attr("disabled", "disabled")
                      , o = t.diffMode;
                    n.children().each(function(n) {
                        var d = i(this)
                          , c = d.data("pos")
                          , p = e.eq(n).is(":checked");
                        t.correct[c] ? (p ? u && (o ? a = t.points[c] : a += t.points[c]) : r = !1,
                        t.disCorrect ? r = !0 : s.methode.marker(d, !0)) : p ? (t.disCorrect ? r = !0 : (s.methode.marker(d, !1),
                        r = !1),
                        o && (a = t.points[c])) : u && !o && (a += t.points[c])
                    })
                },
                sort_answer: function() {
                    var e = n.children();
                    e.each(function(e, o) {
                        var n = i(this);
                        d[e] = n.data("pos"),
                        e == n.data("pos") ? (s.methode.marker(n, !0),
                        u && (a += t.points[e])) : (s.methode.marker(n, !1),
                        r = !1)
                    }),
                    e.children().css({
                        "box-shadow": "0 0",
                        cursor: "auto"
                    }),
                    n.sortable("destroy"),
                    e.sort(function(e, t) {
                        return i(e).data("pos") > i(t).data("pos") ? 1 : -1
                    }),
                    n.append(e)
                },
                matrix_sort_answer: function() {
                    var e = n.children()
                      , c = new Array;
                    d = {
                        0: -1
                    },
                    e.each(function() {
                        var e = i(this)
                          , o = e.data("pos")
                          , n = e.find(".wpAdvQuiz_maxtrixSortCriterion")
                          , p = n.children();
                        p.length && (d[o] = p.data("pos")),
                        p.length && i.inArray(String(o), String(p.data("correct")).split(",")) >= 0 ? (s.methode.marker(n, !0),
                        u && (a += t.points[o])) : (r = !1,
                        s.methode.marker(n, !1)),
                        c[o] = n
                    }),
                    s.methode.resetMatrix(o),
                    o.find(".wpAdvQuiz_sortStringItem").each(function() {
                        var e = c[i(this).data("pos")];
                        void 0 != e && e.append(this)
                    }).css({
                        "box-shadow": "0 0",
                        cursor: "auto"
                    }),
                    o.find(".wpAdvQuiz_sortStringList, .wpAdvQuiz_maxtrixSortCriterion").sortable("destroy")
                },
                free_answer: function() {
                    var e = n.children()
                      , o = e.find(".wpAdvQuiz_questionInput").attr("disabled", "disabled").val();
                    i.inArray(i.trim(o).toLowerCase(), t.correct) >= 0 ? s.methode.marker(e, !0) : (s.methode.marker(e, !1),
                    r = !1)
                },
                cloze_answer: function() {
                    n.find(".wpAdvQuiz_cloze").each(function(e, o) {
                        var n = i(this)
                          , d = n.children()
                          , c = d.eq(0)
                          , p = d.eq(1)
                          , l = s.methode.cleanupCurlyQuotes(c.val());
                        i.inArray(l, t.correct[e]) >= 0 ? (u && (a += t.points[e]),
                        m.disabledAnswerMark || c.css("background-color", "#B0DAB0")) : (m.disabledAnswerMark || c.css("background-color", "#FFBABA"),
                        r = !1,
                        p.show()),
                        c.attr("disabled", "disabled")
                    })
                },
                assessment_answer: function() {
                    r = !0;
                    var e = n.find(".wpAdvQuiz_questionInput").attr("disabled", "disabled")
                      , t = 0;
                    e.filter(":checked").each(function() {
                        t += parseInt(i(this).val())
                    }),
                    a = t
                }
            };
            return c[e](),
            !u && r && (a = t.points),
            {
                c: r,
                p: a,
                s: d
            }
        }
          , k = new function() {
            var e = {
                isEmpty: function(e) {
                    return e = i.trim(e),
                    !e || 0 === e.length
                }
            }
              , t = {
                TEXT: 0,
                TEXTAREA: 1,
                NUMBER: 2,
                CHECKBOX: 3,
                EMAIL: 4,
                YES_NO: 5,
                DATE: 6,
                SELECT: 7,
                RADIO: 8,
                MULTICHECKBOX: 9 //Edit
            };
            this.checkForm = function() {
                var o = !0;
                return n.find(".wpAdvQuiz_forms input, .wpAdvQuiz_forms textarea, .wpAdvQuiz_forms .wpAdvQuiz_formFields, .wpAdvQuiz_forms select").each(function() {
                    var n = i(this)
                      , r = 1 == n.data("required")
                      , s = n.data("type")
                      , a = !0
                      , u = i.trim(n.val());
                    switch (s) {
                    case t.TEXT:
                    case t.TEXTAREA:
                    case t.SELECT:
                        r && (a = !e.isEmpty(u));
                        break;
                    case t.NUMBER:
                        !r && e.isEmpty(u) || (a = !e.isEmpty(u) && !isNaN(u));
                        break;
                    case t.EMAIL:
                        !r && e.isEmpty(u) || (a = !e.isEmpty(u) && new RegExp(/^[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/).test(u.toLowerCase()));
                        break;
                    case t.CHECKBOX:
                        r && (a = n.is(":checked"));
                        break;
                    case t.YES_NO:
                    case t.RADIO:
                        r && (a = void 0 !== n.find('input[type="radio"]:checked').val());
                        break;
                    case t.DATE:
                        var d = 0
                          , c = 0;
                        n.find("select").each(function() {
                            d++,
                            c += e.isEmpty(i(this).val()) ? 0 : 1
                        }),
                        (r || c > 0) && (a = d == c)
                    //Edit
                    case t.MULTICHECKBOX:
                        r && (a = void 0 !== n.find('input[type="checkbox"]:checked').val());
                        break;
                    }
                    a ? n.siblings(".wpAdvQuiz_invalidate").hide() : (o = !1,
                    n.siblings(".wpAdvQuiz_invalidate").show())
                }),
                o
            }
            ,
            this.getFormData = function() {
                var e = {};
                return n.find(".wpAdvQuiz_forms input, .wpAdvQuiz_forms textarea, .wpAdvQuiz_forms .wpAdvQuiz_formFields, .wpAdvQuiz_forms select").each(function() {
                    var o = i(this)
                      , n = o.data("form_id")
                      , r = o.data("type");
                    switch (r) {
                    case t.TEXT:
                    case t.TEXTAREA:
                    case t.SELECT:
                    case t.NUMBER:
                    case t.EMAIL:
                        e[n] = o.val();
                        break;
                    case t.CHECKBOX:
                        e[n] = o.is(":checked") ? 1 : 0;
                        break;
                    case t.YES_NO:
                    case t.RADIO:
                        e[n] = o.find('input[type="radio"]:checked').val();
                        break;
                    case t.DATE:
                        e[n] = {
                            day: o.find('select[name="wpAdvQuiz_field_' + n + '_day"]').val(),
                            month: o.find('select[name="wpAdvQuiz_field_' + n + '_month"]').val(),
                            year: o.find('select[name="wpAdvQuiz_field_' + n + '_year"]').val()
                        }
                    //Edit
                    case t.MULTICHECKBOX:
                        e[n] = o.find('input[type="checkbox"]:checked').map(function() {
                            return i(this).val();
                        }).get();
                        e[n] = e[n].join(',');
                        console.log(e[n]);
                        break;
                    }
                }),
                e
            }
        }
          , S = function(e) {
            n.find(".wpAdvQuiz_questionList").each(function() {
                var t = i(this)
                  , o = t.data("question_id")
                  , n = t.data("type")
                  , r = {};
                if ("single" == n || "multiple" == n)
                    t.find(".wpAdvQuiz_questionListItem").each(function() {
                        r[i(this).data("pos")] = +i(this).find(".wpAdvQuiz_questionInput").is(":checked")
                    });
                else if ("free_answer" == n)
                    r[0] = t.find(".wpAdvQuiz_questionInput").val();
                else {
                    if ("sort_answer" == n)
                        return !0;
                    if ("matrix_sort_answer" == n)
                        return !0;
                    if ("cloze_answer" == n) {
                        var s = 0;
                        t.find(".wpAdvQuiz_cloze input").each(function() {
                            r[s++] = i(this).val()
                        })
                    } else
                        "assessment_answer" == n && (r[0] = "",
                        t.find(".wpAdvQuiz_questionInput:checked").each(function() {
                            r[i(this).data("index")] = i(this).val()
                        }))
                }
                e[o].data = r
            })
        };
        s.methode = {
            parseBitOptions: function() {
                if (r.bo) {
                    m.randomAnswer = 1 & r.bo,
                    m.randomQuestion = 2 & r.bo,
                    m.disabledAnswerMark = 4 & r.bo,
                    m.checkBeforeStart = 8 & r.bo,
                    m.preview = 16 & r.bo,
                    m.isAddAutomatic = 64 & r.bo,
                    m.reviewQustion = 128 & r.bo,
                    m.quizSummeryHide = 256 & r.bo,
                    m.skipButton = 512 & r.bo,
                    m.autoStart = 1024 & r.bo,
                    m.forcingQuestionSolve = 2048 & r.bo,
                    m.hideQuestionPositionOverview = 4096 & r.bo,
                    m.formActivated = 8192 & r.bo,
                    m.maxShowQuestion = 16384 & r.bo,
                    m.sortCategories = 32768 & r.bo;
                    var i = 32 & r.bo;
                    i && void 0 != jQuery.support && void 0 != jQuery.support.cors && 0 == jQuery.support.cors && (m.cors = i)
                }
            },
            setClozeStyle: function() {
                n.find(".wpAdvQuiz_cloze input").each(function() {
                    for (var e = i(this), t = "", o = e.data("wordlen"), n = 0; n < o; n++)
                        t += "w";
                    var r = i(document.createElement("span")).css("visibility", "hidden").text(t).appendTo(i("body"))
                      , s = r.width();
                    r.remove(),
                    e.width(s + 5)
                })
            },
            parseTime: function(i) {
                var e = parseInt(i % 60)
                  , t = parseInt(i / 60 % 60)
                  , o = parseInt(i / 3600 % 24);
                return e = (e > 9 ? "" : "0") + e,
                t = (t > 9 ? "" : "0") + t,
                o = (o > 9 ? "" : "0") + o,
                o + ":" + t + ":" + e
            },
            cleanupCurlyQuotes: function(e) {
                return e = e.replace(/\u2018/, "'"),
                e = e.replace(/\u2019/, "'"),
                e = e.replace(/\u201C/, '"'),
                e = e.replace(/\u201D/, '"'),
                i.trim(e).toLowerCase()
            },
            resetMatrix: function(e) {
                e.each(function() {
                    var e = i(this)
                      , t = e.find(".wpAdvQuiz_sortStringList");
                    e.find(".wpAdvQuiz_sortStringItem").each(function() {
                        t.append(i(this))
                    })
                })
            },
            marker: function(i, e) {
                m.disabledAnswerMark || (e ? i.addClass("wpAdvQuiz_answerCorrect") : i.addClass("wpAdvQuiz_answerIncorrect"))
            },
            startQuiz: function(e) {
			
                if (w.loadLock)
                    return void (w.isQuizStart = 1);
                if (w.isQuizStart = 0,
                w.isLocked)
                    return z.quizStartPage.hide(),
                    void n.find(".wpAdvQuiz_lock").show();
                if (w.isPrerequisite)
                    return z.quizStartPage.hide(),
                    void n.find(".wpAdvQuiz_prerequisite").show();
                if (w.isUserStartLocked)
                    return z.quizStartPage.hide(),
                    void n.find(".wpAdvQuiz_startOnlyRegisteredUser").show();
                if (m.maxShowQuestion && !e)
                    return z.quizStartPage.hide(),
                    n.find(".wpAdvQuiz_loadQuiz").show(),
                    void s.methode.loadQuizDataAjax(!0);
                if (!m.formActivated || r.formPos != _.START || k.checkForm()) {
                    switch (s.methode.loadQuizData(),
                    m.randomQuestion && s.methode.random(z.questionList),
                    m.randomAnswer && s.methode.random(n.find(Q.questionList)),
                    m.sortCategories && s.methode.sortCategories(),
                    s.methode.random(n.find(".wpAdvQuiz_sortStringList")),
                    s.methode.random(n.find('[data-type="sort_answer"]')),
                    n.find(".wpAdvQuiz_listItem").each(function(e, t) {
                        var o = i(this);
                        o.find(".wpAdvQuiz_question_page span:eq(0)").text(e + 1),
                        o.find("> h5 span").text(e + 1),
                        o.find(".wpAdvQuiz_questionListItem").each(function(e, t) {
                            i(this).find("> span:not(.wpAdvQuiz_cloze)").text(e + 1 + ". ")
                        })
                    }),
                    z.next = n.find(Q.next),
                    r.mode) {
                    case 3:
                        n.find('input[name="checkSingle"]').show();
                        break;
                    case 2:
                        n.find(Q.check).show(),
                        !m.skipButton && m.reviewQustion && n.find(Q.skip).show();
						
                        break;
                    case 1:
                        n.find('input[name="back"]').slice(1).show();
                    case 0:
                        z.next.show()
                    }
                    (m.hideQuestionPositionOverview || 3 == r.mode) && n.find(".wpAdvQuiz_question_page").hide();
                    var o = z.next.last();
                    l = o.val(),
                    o.val(r.lbn);
                    var h = z.questionList.children();
                    if (z.listItems = n.find(".wpAdvQuiz_list > li"),
                    3 == r.mode)
                        s.methode.showSinglePage(0);
                    else {
                        c = h.eq(0).show();
                        var f = c.find(Q.questionList).data("question_id");
                        q.questionStart(f)
                    }
                    q.startQuiz(),
                    n.find(".wpAdvQuiz_sortable").parents("ul").sortable({
                        update: function(e, t) {
                            var o = i(this).parents(".wpAdvQuiz_listItem");
                            n.trigger({
                                type: "questionSolved",
                                values: {
                                    item: o,
                                    index: o.index(),
                                    solved: !0
                                }
                            })
                        }
                    }).disableSelection(),
                    n.find(".wpAdvQuiz_sortStringList, .wpAdvQuiz_maxtrixSortCriterion").sortable({
                        connectWith: ".wpAdvQuiz_maxtrixSortCriterion:not(:has(li)), .wpAdvQuiz_sortStringList",
                        placeholder: "wpAdvQuiz_placehold",
                        update: function(e, t) {
                            var o = i(this).parents(".wpAdvQuiz_listItem");
                            n.trigger({
                                type: "questionSolved",
                                values: {
                                    item: o,
                                    index: o.index(),
                                    solved: !0
                                }
                            })
                        }
                    }).disableSelection(),
                    p = [],
                    P.start(),
                    d = +new Date,
                    a = {
                        comp: {
                            points: 0,
                            correctQuestions: 0,
                            quizTime: 0
                        }
                    },
                    n.find(".wpAdvQuiz_questionList").each(function() {
                        var e = i(this).data("question_id");
                        a[e] = {
                            time: 0,
                            solved: 0
                        }
                    }),
                    u = {},
                    i.each(t.catPoints, function(i, e) {
                        u[i] = 0
                    }),
                    z.quizStartPage.hide(),
                    n.find(".wpAdvQuiz_loadQuiz").hide(),
                    z.quiz.show(),
                    g.show(),
                    3 != r.mode && n.trigger({
                        type: "changeQuestion",
                        values: {
                            item: c,
                            index: c.index()
                        }
                    })
                }
            },
            showSingleQuestion: function(i) {
                var e = i ? Math.ceil(i / r.qpp) : 1;
                this.showSinglePage(e)
            },
            showSinglePage: function(i) {
                if ($listItem = z.questionList.children().hide(),
                !r.qpp)
                    return void $listItem.show();
                i = i ? +i : 1;
                var e = Math.ceil(n.find(".wpAdvQuiz_list > li").length / r.qpp);
                if (!(i > e)) {
                    var t = n.find(Q.singlePageLeft).hide()
                      , o = n.find(Q.singlePageRight).hide()
                      , a = n.find('input[name="checkSingle"]').hide();
                    i > 1 && t.val(t.data("text").replace(/%d/, i - 1)).show(),
                    i == e ? a.show() : o.val(o.data("text").replace(/%d/, i + 1)).show(),
                    f = i;
                    var u = r.qpp * (i - 1);
                    $listItem.slice(u, u + r.qpp).show(),
                    s.methode.scrollTo(z.quiz)
                }
            },
            nextQuestion: function() {
                this.showQuestionObject(c.next())
            },
            prevQuestion: function() {
                this.showQuestionObject(c.prev())
            },
            showQuestion: function(i) {
                var e = z.listItems.eq(i);
                return 3 == r.mode || h ? (r.qpp && s.methode.showSingleQuestion(i + 1),
                s.methode.scrollTo(e, 1),
                void q.startQuiz()) : void this.showQuestionObject(e)
            },
            showQuestionObject: function(i) {
                if (!i.length && m.forcingQuestionSolve && m.quizSummeryHide && m.reviewQustion)
                    for (var e = 0, t = n.find(".wpAdvQuiz_listItem").length; e < t; e++)
                        if (!p[e])
                            return alert(WpAdvQuizGlobal.questionsNotSolved),
                            !1;
                if (c.hide(),
                c = i.show(),
                s.methode.scrollTo(z.quiz),
                n.trigger({
                    type: "changeQuestion",
                    values: {
                        item: c,
                        index: c.index()
                    }
                }),
                c.length) {
                    var o = c.find(Q.questionList).data("question_id");
                    q.questionStart(o)
                } else
                    s.methode.showQuizSummary()
            },
            skipQuestion: function() {
                n.trigger({
                    type: "skipQuestion",
                    values: {
                        item: c,
                        index: c.index()
                    }
                }),
                s.methode.nextQuestion()
            },
            reviewQuestion: function() {
                n.trigger({
                    type: "reviewQuestion",
                    values: {
                        item: c,
                        index: c.index()
                    }
                })
            },
            showQuizSummary: function() {
                if (q.questionStop(),
                q.stopQuiz(),
                m.quizSummeryHide || !m.reviewQustion)
                    return void (m.formActivated && r.formPos == _.END ? (g.hide(),
                    z.quiz.hide(),
                    s.methode.scrollTo(n.find(".wpAdvQuiz_infopage").show())) : s.methode.finishQuiz());
                var e = n.find(".wpAdvQuiz_checkPage");
                e.find("ol:eq(0)").empty().append(n.find(".wpAdvQuiz_reviewQuestion ol li").clone().removeClass("wpAdvQuiz_reviewQuestionTarget")).children().click(function(t) {
                    e.hide(),
                    z.quiz.show(),
                    g.show(!0),
                    s.methode.showQuestion(i(this).index())
                });
                for (var t = 0, o = 0, a = p.length; o < a; o++)
                    p[o] && t++;
                e.find("span:eq(0)").text(t),
                g.hide(),
                z.quiz.hide(),
                e.show(),
                s.methode.scrollTo(e)
            },
            finishQuiz: function(e) {
                q.questionStop(),
                q.stopQuiz(),
                P.stop();
                var t = (+new Date - d) / 1e3;
                t = r.timelimit && t > r.timelimit ? r.timelimit : t,
                n.find(".wpAdvQuiz_quiz_time span").text(s.methode.parseTime(t)),
                e && z.results.find(".wpAdvQuiz_time_limit_expired").show(),
                s.methode.checkQuestion(z.questionList.children(), !0),
                n.find(".wpAdvQuiz_correct_answer").text(a.comp.correctQuestions),
                a.comp.result = Math.round(a.comp.points / r.globalPoints * 100 * 100) / 100,
                a.comp.solved = 0;
                var o = n.find(".wpAdvQuiz_points span");
                o.eq(0).text(a.comp.points),
                o.eq(1).text(r.globalPoints),
                o.eq(2).text(a.comp.result + "%");
                var u = n.find(".wpAdvQuiz_resultsList > li").eq(s.methode.findResultIndex(a.comp.result))
                  , c = k.getFormData();
                u.find(".wpAdvQuiz_resultForm").each(function() {
                    var e = i(this)
                      , t = e.data("form_id")
                      , o = c[t];
                    "object" == typeof o && (o = o.day + "-" + o.month + "-" + o.year),
                    e.text(o).show()
                }),
                u.show(),
                s.methode.setAverageResult(a.comp.result, !1),
                this.setCategoryOverview(),
                s.methode.sendCompletedQuiz(),
                m.isAddAutomatic && v.isUser && s.methode.addToplist(),
                g.hide(),
                n.find(".wpAdvQuiz_checkPage, .wpAdvQuiz_infopage").hide(),
                z.quiz.hide(),
                z.results.show(),
                s.methode.scrollTo(z.results)
            },
            setCategoryOverview: function() {
                a.comp.cats = {},
                n.find(".wpAdvQuiz_catOverview li").each(function() {
                    var e = i(this)
                      , t = e.data("category_id");
                    if (void 0 === r.catPoints[t])
                        return e.hide(),
                        !0;
                    var o = Math.round(u[t] / r.catPoints[t] * 100 * 100) / 100;
                    a.comp.cats[t] = o,
                    e.find(".wpAdvQuiz_catPercent").text(o + "%"),
                    e.show()
                })
            },
            questionSolved: function(i) {
                p[i.values.index] = i.values.solved;
                var e = i.values.item.find(Q.questionList)
                  , t = r.json[e.data("question_id")];
                a[t.id].solved = Number(i.values.fake ? a[t.id].solved : i.values.solved)
            },
            sendCompletedQuiz: function() {
                if (!m.preview) {
                    S(a);
                    var i = k.getFormData();
                    console.log(i);
                    s.methode.ajax({
                        action: "wp_adv_quiz_admin_ajax",
                        func: "completedQuiz",
                        data: {
                            quizId: r.quizId,
                            results: a,
                            forms: i
                        }
                    })
                }
            },
            findResultIndex: function(i) {
                for (var e = r.resultsGrade, t = -1, o = 999999, n = 0; n < e.length; n++) {
                    var s = e[n];
                    i >= s && i - s < o && (o = i - s,
                    t = n)
                }
                return t
            },
            showQustionList: function() {
                h = !h,
                z.toplistShowInButton.hide(),
                z.quiz.toggle(),
                n.find(".wpAdvQuiz_QuestionButton").hide(),
                z.questionList.children().show(),
                g.toggle(),
                n.find(".wpAdvQuiz_question_page").hide()
            },
            random: function(e) {
                e.each(function() {
                    var e = i(this).children().get().sort(function() {
                        return Math.round(Math.random()) - .5
                    });
                    i(e).appendTo(e[0].parentNode)
                })
            },
            sortCategories: function() {
                var e = i(".wpAdvQuiz_list").children().get().sort(function(e, t) {
                    var o = i(e).find(".wpAdvQuiz_questionList").data("question_id")
                      , n = i(t).find(".wpAdvQuiz_questionList").data("question_id");
                    return r.json[o].catId - r.json[n].catId
                });
                i(e).appendTo(e[0].parentNode)
            },
            restartQuiz: function() {
                z.results.hide(),
                z.quizStartPage.show(),
                z.questionList.children().hide(),
                z.toplistShowInButton.hide(),
                g.hide(),
                n.find(".wpAdvQuiz_questionInput, .wpAdvQuiz_cloze input").removeAttr("disabled").removeAttr("checked").css("background-color", ""),
                n.find('.wpAdvQuiz_questionListItem input[type="text"]').val(""),
                n.find(".wpAdvQuiz_answerCorrect, .wpAdvQuiz_answerIncorrect").removeClass("wpAdvQuiz_answerCorrect wpAdvQuiz_answerIncorrect"),
                n.find(".wpAdvQuiz_listItem").data("check", !1),
                n.find(".wpAdvQuiz_response").hide().children().hide(),
                s.methode.resetMatrix(n.find(".wpAdvQuiz_listItem")),
                n.find(".wpAdvQuiz_sortStringItem, .wpAdvQuiz_sortable").removeAttr("style"),
                n.find(".wpAdvQuiz_clozeCorrect, .wpAdvQuiz_QuestionButton, .wpAdvQuiz_resultsList > li").hide(),
				n.find('.wpAdvQuiz_question_page, input[name="tip"]').show(),
                n.find('.wpAdvQuiz_question_page, input[name="skip"]').show();
                n.find(".wpAdvQuiz_resultForm").text("").hide(),
                z.results.find(".wpAdvQuiz_time_limit_expired").hide(),
                z.next.last().val(l),
                h = !1
			
            },
            checkQuestion: function(e, t) {
                e = void 0 == e ? c : e,
                e.each(function() {
                    var e = i(this)
                      , o = e.find(Q.questionList)
                      , s = r.json[o.data("question_id")]
                      , d = s.type;
                    if (q.questionStop(),
                    e.data("check"))
                        return !0;
                    "single" != s.type && "multiple" != s.type || (d = "singleMulti");
                    var c = x(d, s, e, o);
                    e.find(".wpAdvQuiz_response").show(),
                    e.find(Q.check).hide(),
                    e.find(Q.skip).hide(),
                    e.find(Q.next).show(),
                    a[s.id].points = c.p,
                    a[s.id].correct = Number(c.c),
                    a[s.id].data = c.s,
                    a.comp.points += c.p,
                    u[s.catId] += c.p,
                    c.c ? (e.find(".wpAdvQuiz_correct").show(),
                    a.comp.correctQuestions += 1) : e.find(".wpAdvQuiz_incorrect").show(),
                    e.find(".wpAdvQuiz_responsePoints").text(c.p),
                    e.data("check", !0),
                    t || n.trigger({
                        type: "questionSolved",
                        values: {
                            item: e,
                            index: e.index(),
                            solved: !0,
                            fake: !0
                        }
                    })
                })
            },
            showTip: function() {
                var e = i(this)
                  , t = e.siblings(".wpAdvQuiz_question").find(Q.questionList).data("question_id");
                e.siblings(".wpAdvQuiz_tipp").toggle("fast"),
                a[t].tip = 1,
                i(document).bind("mouseup.tipEvent", function(e) {
                    var t = n.find(".wpAdvQuiz_tipp")
                      , o = n.find('input[name="tip"]');
                    t.is(e.target) || 0 != t.has(e.target).length || o.is(e.target) || (t.hide("fast"),
                    i(document).unbind(".tipEvent"))
                })
            },
            ajax: function(e, t, o) {
                o = o || "json",
                m.cors && (jQuery.support.cors = !0),
                i.post(WpAdvQuizGlobal.ajaxurl, e, t, o),
                m.cors && (jQuery.support.cors = !1)
            },
            checkQuizLock: function() {
                w.loadLock = 1,
                s.methode.ajax({
                    action: "wp_adv_quiz_admin_ajax",
                    func: "quizCheckLock",
                    data: {
                        quizId: r.quizId
                    }
                }, function(i) {
                    void 0 != i.lock && (w.isLocked = i.lock.is,
                    i.lock.pre && n.find('input[name="restartQuiz"]').hide()),
                    void 0 != i.prerequisite && (w.isPrerequisite = 1,
                    n.find(".wpAdvQuiz_prerequisite span").text(i.prerequisite)),
                    void 0 != i.startUserLock && (w.isUserStartLocked = i.startUserLock),
                    w.loadLock = 0,
                    w.isQuizStart && s.methode.startQuiz()
                })
            },
            loadQuizData: function() {
                s.methode.ajax({
                    action: "wp_adv_quiz_admin_ajax",
                    func: "loadQuizData",
                    data: {
                        quizId: r.quizId
                    }
                }, function(i) {
                    i.toplist && s.methode.handleToplistData(i.toplist),
                    void 0 != i.averageResult && s.methode.setAverageResult(i.averageResult, !0)
                })
            },
            setAverageResult: function(i, e) {
                var t = n.find(".wpAdvQuiz_resultValue:eq(" + (e ? 0 : 1) + ") > * ");
                t.eq(1).text(i + "%"),
                t.eq(0).css("width", 240 * i / 100 + "px")
            },
            handleToplistData: function(i) {
                var e = n.find(".wpAdvQuiz_addToplist")
                  , t = e.find(".wpAdvQuiz_addBox").show().children("div");
                if (i.canAdd)
                    if (e.show(),
                    e.find(".wpAdvQuiz_addToplistMessage").hide(),
                    e.find(".wpAdvQuiz_toplistButton").show(),
                    v.token = i.token,
                    v.isUser = 0,
                    i.userId)
                        t.hide(),
                        v.isUser = 1,
                        m.isAddAutomatic && e.hide();
                    else {
                        t.show();
                        var o = t.children().eq(1);
                        i.captcha ? (o.find('input[name="wpAdvQuiz_captchaPrefix"]').val(i.captcha.code),
                        o.find(".wpAdvQuiz_captchaImg").attr("src", i.captcha.img),
                        o.find('input[name="wpAdvQuiz_captcha"]').val(""),
                        o.show()) : o.hide()
                    }
                else
                    e.hide()
            },
            scrollTo: function(e, t) {
                var o = e.offset().top - 100;
                (t || (window.pageYOffset || document.body.scrollTop) > o) && i("html,body").animate({
                    scrollTop: o
                }, 300)
            },
            addToplist: function() {
                if (!m.preview) {
                    var i = n.find(".wpAdvQuiz_addToplistMessage").text(WpAdvQuizGlobal.loadData).show()
                      , e = n.find(".wpAdvQuiz_addBox").hide();
                    s.methode.ajax({
                        action: "wp_adv_quiz_admin_ajax",
                        func: "addInToplist",
                        data: {
                            quizId: r.quizId,
                            token: v.token,
                            name: e.find('input[name="wpAdvQuiz_toplistName"]').val(),
                            email: e.find('input[name="wpAdvQuiz_toplistEmail"]').val(),
                            captcha: e.find('input[name="wpAdvQuiz_captcha"]').val(),
                            prefix: e.find('input[name="wpAdvQuiz_captchaPrefix"]').val(),
                            points: a.comp.points,
                            totalPoints: r.globalPoints
                        }
                    }, function(t) {
                        i.text(t.text),
                        t.clear ? (e.hide(),
                        s.methode.updateToplist()) : e.show(),
                        t.captcha && (e.find(".wpAdvQuiz_captchaImg").attr("src", t.captcha.img),
                        e.find('input[name="wpAdvQuiz_captchaPrefix"]').val(t.captcha.code),
                        e.find('input[name="wpAdvQuiz_captcha"]').val(""))
                    })
                }
            },
            updateToplist: function() {
                "function" == typeof wpAdvQuiz_fetchToplist && wpAdvQuiz_fetchToplist()
            },
            registerSolved: function() {
                n.find('.wpAdvQuiz_questionInput[type="text"]').change(function(e) {
                    var t = i(this)
                      , o = t.parents(".wpAdvQuiz_listItem")
                      , r = !1;
                    "" != t.val() && (r = !0),
                    n.trigger({
                        type: "questionSolved",
                        values: {
                            item: o,
                            index: o.index(),
                            solved: r
                        }
                    })
                }),
                n.find('.wpAdvQuiz_questionList[data-type="single"] .wpAdvQuiz_questionInput, .wpAdvQuiz_questionList[data-type="assessment_answer"] .wpAdvQuiz_questionInput').change(function(e) {
                    var t = i(this)
                      , o = t.parents(".wpAdvQuiz_listItem")
                      , r = this.checked;
                    n.trigger({
                        type: "questionSolved",
                        values: {
                            item: o,
                            index: o.index(),
                            solved: r
                        }
                    })
                }),
                n.find(".wpAdvQuiz_cloze input").change(function() {
                    var e = i(this)
                      , t = e.parents(".wpAdvQuiz_listItem")
                      , o = !0;
                    t.find(".wpAdvQuiz_cloze input").each(function() {
                        if ("" == i(this).val())
                            return o = !1,
                            !1
                    }),
                    n.trigger({
                        type: "questionSolved",
                        values: {
                            item: t,
                            index: t.index(),
                            solved: o
                        }
                    })
                }),
                n.find('.wpAdvQuiz_questionList[data-type="multiple"] .wpAdvQuiz_questionInput').change(function(e) {
                    var t = i(this)
                      , o = t.parents(".wpAdvQuiz_listItem")
                      , r = 0;
                    o.find('.wpAdvQuiz_questionList[data-type="multiple"] .wpAdvQuiz_questionInput').each(function(i) {
                        this.checked && r++
                    }),
                    n.trigger({
                        type: "questionSolved",
                        values: {
                            item: o,
                            index: o.index(),
                            solved: !!r
                        }
                    })
                })
            },
            loadQuizDataAjax: function(e) {
                s.methode.ajax({
                    action: "wp_adv_quiz_admin_ajax",
                    func: "quizLoadData",
                    data: {
                        quizId: r.quizId
                    }
                }, function(t) {
                    r.globalPoints = t.globalPoints,
                    r.catPoints = t.catPoints,
                    r.json = t.json,
                    z.quiz.remove(),
                    n.find(".wpAdvQuiz_quizAnker").after(t.content),
                    z = {
                        back: n.find('input[name="back"]'),
                        next: n.find(Q.next),
                        quiz: n.find(".wpAdvQuiz_quiz"),
                        questionList: n.find(".wpAdvQuiz_list"),
                        results: n.find(".wpAdvQuiz_results"),
                        quizStartPage: n.find(".wpAdvQuiz_text"),
                        timelimit: n.find(".wpAdvQuiz_time_limit"),
                        toplistShowInButton: n.find(".wpAdvQuiz_toplistShowInButton"),
                        listItems: i()
                    },
                    s.methode.initQuiz(),
                    e && s.methode.startQuiz(!0)
                })
            },
            initQuiz: function() {
                s.methode.setClozeStyle(),
                s.methode.registerSolved(),
                z.next.click(function() {
                    return !m.forcingQuestionSolve || p[c.index()] || !m.quizSummeryHide && m.reviewQustion ? void s.methode.nextQuestion() : (alert(WpAdvQuizGlobal.questionNotSolved),
                    !1)
                }),
                z.back.click(function() {
                    s.methode.prevQuestion()
                }),
                n.find(Q.check).click(function() {
                    return !m.forcingQuestionSolve || p[c.index()] || !m.quizSummeryHide && m.reviewQustion ? void s.methode.checkQuestion() : (alert(WpAdvQuizGlobal.questionNotSolved),
                    !1)
                }),
                n.find('input[name="checkSingle"]').click(function() {
                    if (m.forcingQuestionSolve && (m.quizSummeryHide || !m.reviewQustion))
                        for (var i = 0, e = n.find(".wpAdvQuiz_listItem").length; i < e; i++)
                            if (!p[i])
                                return alert(WpAdvQuizGlobal.questionsNotSolved),
                                !1;
                    //Edit
                    if (k.checkForm())
                        s.methode.showQuizSummary()
                    
                }),
                n.find('input[name="tip"]').click(s.methode.showTip),
                n.find('input[name="skip"]').click(s.methode.skipQuestion),
                n.find('input[name="wpAdvQuiz_pageLeft"]').click(function() {
                    s.methode.showSinglePage(f - 1)
                }),
                n.find('input[name="wpAdvQuiz_pageRight"]').click(function() {
                    s.methode.showSinglePage(f + 1)
                })
            }
        },
        s.preInit = function() {
            s.methode.parseBitOptions(),
            g.init(),
            n.find('input[name="startQuiz"]').click(function() {
                return s.methode.startQuiz(),
                !1
            }),
            m.checkBeforeStart && !m.preview && s.methode.checkQuizLock(),
            n.find('input[name="reShowQuestion"]').click(function() {
                s.methode.showQustionList()
            }),
            n.find('input[name="restartQuiz"]').click(function() {
                s.methode.restartQuiz()
				
            }),
            n.find('input[name="review"]').click(s.methode.reviewQuestion),
            n.find('input[name="wpAdvQuiz_toplistAdd"]').click(s.methode.addToplist),
            n.find('input[name="quizSummary"]').click(s.methode.showQuizSummary),
            n.find('input[name="endQuizSummary"]').click(function() {
                if (m.forcingQuestionSolve)
                    for (var i = 0, e = n.find(".wpAdvQuiz_listItem").length; i < e; i++)
                        if (!p[i])
                            return alert(WpAdvQuizGlobal.questionsNotSolved),
                            !1;
                m.formActivated && r.formPos == _.END && !k.checkForm() || s.methode.finishQuiz()
            }),
            n.find('input[name="endInfopage"]').click(function() {
                k.checkForm() && s.methode.finishQuiz()
            }),
            n.find('input[name="showToplist"]').click(function() {
                z.quiz.hide(),
                z.toplistShowInButton.toggle()
            }),
            n.bind("questionSolved", s.methode.questionSolved),
            m.maxShowQuestion || s.methode.initQuiz(),
            m.autoStart && s.methode.startQuiz()
        }
        ,
        s.preInit()
    }
    ,
    i.fn.wpAdvQuizFront = function(e) {
        return this.each(function() {
            void 0 == i(this).data("wpAdvQuizFront") && i(this).data("wpAdvQuizFront", new i.wpAdvQuizFront(this,e))
        })
    }
}(jQuery);
